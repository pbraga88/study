Message Printing - printk
=========================
Os oito níveis de mensagens de log e os seus significados podem ser encontrados em 'include/linux/kernel_levels.h':

#define KERN_SOH "\001" /* ASCII Start Of Header */
#define KERN_SOH_ASCII '\001'
#define KERN_EMERG KERN_SOH "0" /* system is unusable */
#define KERN_ALERT KERN_SOH "1" /* action must be taken immediately */
#define KERN_CRIT KERN_SOH "2" /* critical conditions */
#define KERN_ERR KERN_SOH "3" /* error conditions */
#define KERN_WARNING KERN_SOH "4" /* warning conditions */
#define KERN_NOTICE KERN_SOH "5" /* normal but significant condition */
#define KERN_INFO KERN_SOH "6" /* informational */
#define KERN_DEBUG KERN_SOH "7" /* debug-level messages */

Note que '0' é a maior prioridade.

Para 'printar' uma mensagem do kernel junto com seu nível de prioridade, pode-se usar a seguinte sintaxe:
printk(KERN_ERR "This is an error\n");

Caso o nível de prioridade (debug level) não seja declarado (printk("This is an error\n");), o kernel atribui um nível 'default', de acordo com a opção 'CONFIG_DEFAULT_MESSAGE_LOGLEVEL' do .config. 

Contudo, faz muito mais sentido, utilizar 'wrapers' para os níveis de prioridade (Debug Level) definidos em 'include/linux/kernel_levels.h': 
pr_emerg, pr_alert, pr_crit, pr_err, pr_warning, pr_notice, pr_info and pr_debug.
Veja o exemplo:
pr_err("This is the same error\n");

Verificar o nível de log no console:
cat /proc/sys/kernel/printk
4 4 1 7

No output acima, o primeiro valor é o nível de log atual (4), e o segundo (também 4) é o 'default', de acordo com a opção de configuração do Kernel 'CONFIG_DEFAULT_MESSAGE_LOGLEVEL'. Os outros dois valores (1 e 7) não são relevantes para este capítulo.

É possível alterar o nível de log atual com o comando:
# echo <level> /proc/sys/kernel/printk
